
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0xc7c
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208      0x4e8 main.o
                0x0000000000000208                setBit
                0x000000000000024c                clearBit
                0x0000000000000294                initRfidReader
                0x0000000000000318                loop
                0x0000000000000684                main
 .text          0x00000000000006f0      0x58c soc-hw.o
                0x00000000000006f0                isr_null
                0x00000000000006f4                tic_isr
                0x0000000000000720                irq_handler
                0x0000000000000784                isr_init
                0x00000000000007a8                isr_register
                0x00000000000007c0                isr_unregister
                0x00000000000007e0                msleep
                0x000000000000081c                nsleep
                0x000000000000084c                tic_init
                0x0000000000000890                wifi_getchar2
                0x00000000000008e8                ok
                0x0000000000000930                uart_init
                0x0000000000000934                uart_putstr
                0x0000000000000968                uart_getchar
                0x000000000000098c                uart_putchar
                0x00000000000009b0                uart_gen_putchar
                0x00000000000009f0                uart_gen_putstr
                0x0000000000000a28                init_wifi
                0x0000000000000a9c                wifi_putchar2
                0x0000000000000b18                uart_one_putchar
                0x0000000000000b3c                uart_one_getchar
                0x0000000000000b60                gpio_get_in
                0x0000000000000b78                gpio_set_o
                0x0000000000000b90                gpio_get_dir
                0x0000000000000ba8                gpio_set_dir
                0x0000000000000bc0                spi_start
                0x0000000000000bdc                spi_read
                0x0000000000000c28                spi_write
                0x0000000000000c64                leer_teclado
                0x0000000000000c7c                _etext = .

.rodata         0x0000000000000c7c      0x144
                0x0000000000000c7c                . = ALIGN (0x4)
                0x0000000000000c7c                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x0000000000000c7c       0xe4 main.o
 .rodata.cst4   0x0000000000000d60        0x4 soc-hw.o
 .rodata.str1.4
                0x0000000000000d64       0x5c soc-hw.o
 *(.rodata1)
                0x0000000000000dc0                _erodata = .

.data           0x0000000000000dc0       0x1c
                0x0000000000000dc0                . = ALIGN (0x4)
                0x0000000000000dc0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000dc0        0x0 crt0ram.o
 .data          0x0000000000000dc0        0x0 main.o
 .data          0x0000000000000dc0       0x1c soc-hw.o
                0x0000000000000dc0                uart0
                0x0000000000000dc4                timer0
                0x0000000000000dc8                gpio0
                0x0000000000000dcc                uart1
                0x0000000000000dd0                spi0
                0x0000000000000dd4                teclado0
                0x0000000000000dd8                i2c0
 *(.data1)
                0x0000000000000de0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000ddc                _edata = .

.bss            0x0000000000000ddc       0x84
                0x0000000000000ddc                . = ALIGN (0x4)
                0x0000000000000ddc                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000ddc        0x0 crt0ram.o
 .bss           0x0000000000000ddc        0x0 main.o
 .bss           0x0000000000000ddc        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x0000000000000ddc       0x84 soc-hw.o
                0x0000000000000ddc                isr_table
                0x0000000000000e5c                tic_msec
                0x0000000000000e60                _ebss = .
                0x0000000000000e60                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x3f8
 .debug_abbrev  0x0000000000000000       0xfb main.o
 .debug_abbrev  0x00000000000000fb      0x2fd soc-hw.o

.debug_info     0x0000000000000000      0xb19
 .debug_info    0x0000000000000000      0x1cd main.o
 .debug_info    0x00000000000001cd      0x94c soc-hw.o

.debug_line     0x0000000000000000      0xb3d
 .debug_line    0x0000000000000000      0x4c6 main.o
 .debug_line    0x00000000000004c6      0x677 soc-hw.o

.debug_frame    0x0000000000000000      0x240
 .debug_frame   0x0000000000000000       0x60 main.o
 .debug_frame   0x0000000000000060      0x1e0 soc-hw.o

.debug_loc      0x0000000000000000      0x5b2
 .debug_loc     0x0000000000000000      0x30e main.o
 .debug_loc     0x000000000000030e      0x2a4 soc-hw.o

.debug_pubnames
                0x0000000000000000      0x288
 .debug_pubnames
                0x0000000000000000       0x4f main.o
 .debug_pubnames
                0x000000000000004f      0x239 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x83
 .debug_pubtypes
                0x0000000000000000       0x12 main.o
 .debug_pubtypes
                0x0000000000000012       0x71 soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x349
 .debug_str     0x0000000000000000       0xcd main.o
                                         0xde (size before relaxing)
 .debug_str     0x00000000000000cd      0x27c soc-hw.o
                                        0x300 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
